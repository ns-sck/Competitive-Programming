int fp(int base, int exp) {
    int rval = 1LL;
    while (exp) {
        if (exp & 1) {
            rval *= base;
            rval %= MOD;
        }
        base *= base;
        base %= MOD;
        exp >>= 1;
    }
    return rval;
}
long long inv(long long x){
	return fp(x, MOD-2);
}

void f() {
    fct[1] = fct[0] = 1;
    for (int i = 2; i < MAX; ++i) {
        fct[i] = (fct[i-1] * i) % MOD;
    }
}

long long comb(long long x, long long y){
	if(x < y) return 0;
	if(y == 0) return 1;
	return (((fct[x] * inv(fct[y])) % MOD) * (inv(fct[x-y]) % MOD)) % MOD;
}